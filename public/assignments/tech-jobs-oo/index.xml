<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Assignment 2: TechJobs (Object-Oriented Edition) :: C# Web Development</title>
    <link>http://localhost:1313/assignments/tech-jobs-oo/index.html</link>
    <description>Introduction Your apprenticeship at LaunchCode is going well! Only a few weeks in and you’re regularly making contributions to code that will eventually be used by all LaunchCode staff.&#xA;Your last task was to get the prototype Tech Jobs app in good shape. Now it’s time to advance the underlying structure of the program.&#xA;Your mentor on this project is Sally, one of the developers at LaunchCode. She regularly supports coders who are just getting started with their careers.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Feb 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/assignments/tech-jobs-oo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Task 1: Explore the Employer Class</title>
      <link>http://localhost:1313/assignments/tech-jobs-oo/task-1/index.html</link>
      <pubDate>Wed, 11 Jan 2023 13:15:59 -0600</pubDate>
      <guid>http://localhost:1313/assignments/tech-jobs-oo/task-1/index.html</guid>
      <description>Open the Employer file in Visual Studio and examine the code. In addition to the three members—nextId, Id, and Value—the class includes some methods like ToString() and Equals().&#xA;You can refer to these examples as you fill in the missing pieces in the other classes, but for now let’s take a closer look at the constructors.&#xA;Assign a Unique ID One neat trick we can use is to automatically assign each new object a unique ID number.</description>
    </item>
    <item>
      <title>Task 2: Complete the Support Classes</title>
      <link>http://localhost:1313/assignments/tech-jobs-oo/task-2/index.html</link>
      <pubDate>Wed, 11 Jan 2023 13:15:59 -0600</pubDate>
      <guid>http://localhost:1313/assignments/tech-jobs-oo/task-2/index.html</guid>
      <description>Warning Due to the fact that this code is being auto-graded as you work through it, make sure that you use any and all names for classes, variables, methods, etc provided to you in these directions.&#xA;Sally needs you to build up the remaining classes. In each case, refer to the Employer class for hints on how to structure your code.&#xA;The Location Class Open the Location.cs file. Note that the methods for this class are done, as is the constructor for initializing the Id property.</description>
    </item>
    <item>
      <title>Task 3: Complete the Job Class</title>
      <link>http://localhost:1313/assignments/tech-jobs-oo/task-3/index.html</link>
      <pubDate>Wed, 11 Jan 2023 13:15:59 -0600</pubDate>
      <guid>http://localhost:1313/assignments/tech-jobs-oo/task-3/index.html</guid>
      <description>Warning Due to the fact that this code is being auto-graded as you work through it, make sure that you use any and all names for classes, variables, methods, etc provided to you in these directions.&#xA;Now open the Job file and follow the TODO prompts to remove the comment markers.&#xA;OOF! There are a lot of fields and properties declared and not much else.&#xA;Code a constructor to initialize the id field with a unique value.</description>
    </item>
    <item>
      <title>Task 4: Use Unit Testing to Verify Parts of the Job Class</title>
      <link>http://localhost:1313/assignments/tech-jobs-oo/task-4/index.html</link>
      <pubDate>Wed, 11 Jan 2023 13:15:59 -0600</pubDate>
      <guid>http://localhost:1313/assignments/tech-jobs-oo/task-4/index.html</guid>
      <description>Warning Due to the fact that this code is being auto-graded as you work through it, make sure that you use any and all names for classes, variables, methods, etc provided to you in these directions.&#xA;The solution currently contains a testing project called TechJobs.Tests. If you open this project, you will find a class called JobTests You will need to add the appropriate dependency to TechJobs.Tests to test the classes in the TechJobsOO project.</description>
    </item>
    <item>
      <title>Task 5: Use TDD to Build The ToString() Method</title>
      <link>http://localhost:1313/assignments/tech-jobs-oo/task-5/index.html</link>
      <pubDate>Wed, 11 Jan 2023 13:15:59 -0600</pubDate>
      <guid>http://localhost:1313/assignments/tech-jobs-oo/task-5/index.html</guid>
      <description>Warning Due to the fact that this code is being auto-graded as you work through it, make sure that you use any and all names for classes, variables, methods, etc provided to you in these directions.&#xA;To display the data for a particular Job object, you need to implement a custom ToString() method. Rather than creating this method and then testing it, you will flip that process using TDD.</description>
    </item>
    <item>
      <title>Task 6: Refactor to DRY the Support Classes</title>
      <link>http://localhost:1313/assignments/tech-jobs-oo/task-6/index.html</link>
      <pubDate>Wed, 11 Jan 2023 13:15:59 -0600</pubDate>
      <guid>http://localhost:1313/assignments/tech-jobs-oo/task-6/index.html</guid>
      <description>Warning Due to the fact that this code is being auto-graded as you work through it, make sure that you use any and all names for classes, variables, methods, etc provided to you in these directions.&#xA;Review the code in the Employer, Location, CoreCompetency, and PositionType classes. What similarities do you see?&#xA;There is a fair amount of repetition between the classes. As a good coder, anytime you find yourself adding identical code in multiple locations you should consider how to streamline the process.</description>
    </item>
    <item>
      <title>Final Steps</title>
      <link>http://localhost:1313/assignments/tech-jobs-oo/final-steps/index.html</link>
      <pubDate>Wed, 11 Jan 2023 13:15:59 -0600</pubDate>
      <guid>http://localhost:1313/assignments/tech-jobs-oo/final-steps/index.html</guid>
      <description>Sanity Check Once you finish all of the tasks outlined above, all that remains is to check the console display.&#xA;Sally has provided some commented-out code in RunTechJobs.cs that prints out a small list of Job objects. Go ahead and activate this code and run it. Properly done, your output should look something like the following:&#xA;ID: 1 Name: Product tester Employer: ACME Location: Desert Position Type: Quality control Core Competency: Persistence ID: 2 Name: Web Developer Employer: LaunchCode Location: St.</description>
    </item>
  </channel>
</rss>