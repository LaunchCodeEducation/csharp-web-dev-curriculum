<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reading :: C# Web Development</title>
    <link>http://localhost:1313/relationships-or-mapping/reading/index.html</link>
    <description>Content Links Types of Relationships A Primer on Lambda Expressions Creating a One-to-Many Relationship Walkthrough: One-to-Many Some Setup Creating a Many-to-Many Relationship Walkthrough: Many-to-Many </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Mar 2023 09:16:07 -0600</lastBuildDate>
    <atom:link href="http://localhost:1313/relationships-or-mapping/reading/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Types of Relationships</title>
      <link>http://localhost:1313/relationships-or-mapping/reading/types-of-relationships/index.html</link>
      <pubDate>Thu, 16 Mar 2023 09:16:07 -0600</pubDate>
      <guid>http://localhost:1313/relationships-or-mapping/reading/types-of-relationships/index.html</guid>
      <description>Types of Relationships Just as database tables can relate to each other, so can classes and objects. In fact, ORM translates relationships between objects into relationships between database rows.&#xA;This chapter introduces the tools needed to create meaningful relationships using ORM. Let’s consider the different types of relationships at a conceptual level. In later sections, we will learn how to implement these relationships using EntityFrameworkCore.&#xA;For the examples below, we use four classes:</description>
    </item>
    <item>
      <title>A Primer on Lambda Expressions</title>
      <link>http://localhost:1313/relationships-or-mapping/reading/primer-on-lambda-expressions/index.html</link>
      <pubDate>Thu, 16 Mar 2023 09:16:07 -0600</pubDate>
      <guid>http://localhost:1313/relationships-or-mapping/reading/primer-on-lambda-expressions/index.html</guid>
      <description>A Primer on Lambda Expressions Before diving into relationships in EF, we need to introduce a new concept.&#xA;A lambda expression is an inline function defined using the symbol =&gt;.&#xA;This symbol is sometimes called a “fat arrow,” and lambda expressions are sometimes called “fat arrow functions.” The most basic syntax for creating a lambda expression is:&#xA;argument =&gt; return expressionThe left-hand side of the expression consists of the arguments to be passed into the function, and the right-hand side states the return expression.</description>
    </item>
    <item>
      <title>Creating a One-to-Many Relationship</title>
      <link>http://localhost:1313/relationships-or-mapping/reading/one-to-many/index.html</link>
      <pubDate>Thu, 16 Mar 2023 09:16:07 -0600</pubDate>
      <guid>http://localhost:1313/relationships-or-mapping/reading/one-to-many/index.html</guid>
      <description>The first relationship we implement will be between the Event and EventCategory classes. We will allow multiple events to be in the same category, but each event will only have one category. Thus, this will be a one-to-many relationship. In this case, we will set up both sides of the relationship, so a many-to-one relationship will result as well.&#xA;We are now ready to create a relationship between Event and EventCategory.</description>
    </item>
    <item>
      <title>Walkthrough: One-to-Many</title>
      <link>http://localhost:1313/relationships-or-mapping/reading/o2m-walkthrough/index.html</link>
      <pubDate>Thu, 16 Mar 2023 09:16:07 -0600</pubDate>
      <guid>http://localhost:1313/relationships-or-mapping/reading/o2m-walkthrough/index.html</guid>
      <description>The following video walkthrough is all of the steps included in the one-to-many section.&#xA;The one-to-many video uses the following github repository orm-1 branch </description>
    </item>
    <item>
      <title>Some Setup</title>
      <link>http://localhost:1313/relationships-or-mapping/reading/some-setup/index.html</link>
      <pubDate>Thu, 16 Mar 2023 09:16:07 -0600</pubDate>
      <guid>http://localhost:1313/relationships-or-mapping/reading/some-setup/index.html</guid>
      <description>Before introducing many-to-many relationships in EntityFrameworkCore, we need to add a new model and view to our app.&#xA;Note The starter code for this chapter is located within the orm-one-to-many branch .&#xA;In this section, we explore how we can work with many-to-many relationships in ASP.NET using EntityFrameworkCore. To do so, we need a class that we can relate to Event in a many-to-many fashion. This is the Tag class.</description>
    </item>
    <item>
      <title>Creating a Many-to-Many Relationship</title>
      <link>http://localhost:1313/relationships-or-mapping/reading/many-to-many/index.html</link>
      <pubDate>Thu, 16 Mar 2023 09:16:07 -0600</pubDate>
      <guid>http://localhost:1313/relationships-or-mapping/reading/many-to-many/index.html</guid>
      <description>Let’s set up a many-to-many relationship between Event and Tag.&#xA;Note The following walkthrough is a continuation of Some Setup . If you have not completed the steps in the Some Setup walkthrough you can either revisit them or start with the following branch: Coding Events some-setup branch Join Tables To relate data in a many-to-many fashion in a relational database requires a new type of SQL table.&#xA;One-to-many relationships are established at the database level by the use of a foreign key column on one side of the relationship.</description>
    </item>
    <item>
      <title>Walkthrough: Many-to-Many</title>
      <link>http://localhost:1313/relationships-or-mapping/reading/m2m-walkthrough/index.html</link>
      <pubDate>Thu, 16 Mar 2023 09:16:07 -0600</pubDate>
      <guid>http://localhost:1313/relationships-or-mapping/reading/m2m-walkthrough/index.html</guid>
      <description>The following video walkthrough is all of the steps included in the many-to-many relationship section.&#xA;The many-to-many video uses the following github repository some-setup branch </description>
    </item>
  </channel>
</rss>