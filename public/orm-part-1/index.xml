<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chapter 17: Introduction to Object-Relational Mapping :: C# Web Development</title>
    <link>http://localhost:1313/orm-part-1/index.html</link>
    <description>Major Concepts By the end of this chapter, you should understand:&#xA;What object-relational mapping is and why developers use it. How to connect an ASP.NET Core MVC application to a MySQL database. How to create a new migration and update the database. How to create a DbContext and why developer use it. Key Terminology Object-Relational Mapping Object-Relational Mapping (ORM) object-relational mapper Entity Framework Core Data Layers Environment Variables Accessing Data Data Store In-Memory Data Store Persistent Data Store DbContext Database Migration Working With Data Stores Dependency Injection Transient Objects Content Links Reading Exercises: OMG the ORM!</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Apr 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/orm-part-1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reading</title>
      <link>http://localhost:1313/orm-part-1/reading/index.html</link>
      <pubDate>Fri, 10 Mar 2023 09:32:46 -0600</pubDate>
      <guid>http://localhost:1313/orm-part-1/reading/index.html</guid>
      <description>Content Links Introduction to Object-Relational Mapping Setting Up a Persistent Database Accessing Data Working with Data Stores Walkthrough: Connecting to the Database </description>
    </item>
    <item>
      <title>Exercises: OMG the ORM!</title>
      <link>http://localhost:1313/orm-part-1/exercises/index.html</link>
      <pubDate>Fri, 10 Mar 2023 09:32:46 -0600</pubDate>
      <guid>http://localhost:1313/orm-part-1/exercises/index.html</guid>
      <description>Exercises For the exercises, we are going to continue building on our CodingEvents application. The exercise instructions assume that your code resembles the orm1-with-db branch. Create a new branch in your own CodingEvents repo to get started on the exercises.&#xA;Note You will be making one model class and adding to DbContext. If you are not sure what these classes should look like, refer back to the section on data stores and DbContext.</description>
    </item>
    <item>
      <title>Studio: OMG more ORM!</title>
      <link>http://localhost:1313/orm-part-1/studio/index.html</link>
      <pubDate>Fri, 10 Mar 2023 09:32:46 -0600</pubDate>
      <guid>http://localhost:1313/orm-part-1/studio/index.html</guid>
      <description>Todayâ€™s studio depends on completion of the exercises . If you have not completed the exercises, go back and complete them before continuing with the studio. If you want to check out one possible solution to the exercises before you get started, look at the orm1-studio branch in CodingEvents.&#xA;Adding a ViewModel With the new table set up in our database and our application displaying event categories, we need to add a ViewModel so we can add validation for new event categories.</description>
    </item>
    <item>
      <title>Next Steps</title>
      <link>http://localhost:1313/orm-part-1/next-steps/index.html</link>
      <pubDate>Fri, 10 Mar 2023 09:01:27 -0600</pubDate>
      <guid>http://localhost:1313/orm-part-1/next-steps/index.html</guid>
      <description>Next Steps This lesson covered the basics of Object-Relational Mapping, connecting CodingEvents to a database, and persistent data.&#xA;Check out these resources if you want a deeper learning journey on these topics.&#xA;What is a Relational Database (RDBMS)? Pomelo.EntityFrameworkCore.MySql Troubleshoot and debug ASP.NET Core projects Websites using ASP.NET Core in the United States Code First to a New Database </description>
    </item>
  </channel>
</rss>