<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reading :: C# Web Development</title>
    <link>http://localhost:1313/aspdotnet-controllers-and-routes/reading/index.html</link>
    <description> Simple Controllers Controllers with Parameters Controllers with Forms Cleaning Up Your Controllers Video Walkthrough </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Feb 2023 14:09:15 -0600</lastBuildDate>
    <atom:link href="http://localhost:1313/aspdotnet-controllers-and-routes/reading/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simple Controllers</title>
      <link>http://localhost:1313/aspdotnet-controllers-and-routes/reading/controllers-simple/index.html</link>
      <pubDate>Mon, 06 Feb 2023 14:09:15 -0600</pubDate>
      <guid>http://localhost:1313/aspdotnet-controllers-and-routes/reading/controllers-simple/index.html</guid>
      <description>The first of the MVC elements we’ll work on implementing are the controllers. Recall that controllers are like the traffic cops of our application. They handle the requests made from users interacting with the application’s view and update model data accordingly. Conversely, changes to model data are sent to the view via controller methods. When the client issues an HTTP request via a URL, we want to make sure that the URL leads to the correct controller so we get an appropriate response.</description>
    </item>
    <item>
      <title>Controllers with Parameters</title>
      <link>http://localhost:1313/aspdotnet-controllers-and-routes/reading/controllers-parameters/index.html</link>
      <pubDate>Mon, 06 Feb 2023 14:09:15 -0600</pubDate>
      <guid>http://localhost:1313/aspdotnet-controllers-and-routes/reading/controllers-parameters/index.html</guid>
      <description>Now that you know the basics of action methods and controllers, we can start to add some more variables into the mix. Some action methods can take in parameters in the form of query strings or sections of the URL path. Passing this URL data to the controller is one step closer to more flexible web applications.&#xA;On the previous page, we learned that a route is the mechanism by which a request path gets assigned to a controller within our application.</description>
    </item>
    <item>
      <title>Controllers with Forms</title>
      <link>http://localhost:1313/aspdotnet-controllers-and-routes/reading/controllers-forms/index.html</link>
      <pubDate>Mon, 06 Feb 2023 14:09:15 -0600</pubDate>
      <guid>http://localhost:1313/aspdotnet-controllers-and-routes/reading/controllers-forms/index.html</guid>
      <description>Sending Form Data What if we want to send over some form data? To send data via a simple form in ASP.NET, we’ll set things up like this:&#xA;We have an action method that generates a form at index and responds to a GET request. We will modify the Index() method we have already written like so and comment out any attributes we have been using:&#xA;1 2 3 4 5 6 7 8 9 public IActionResult Index() { string html = &#34;&lt;form method=&#39;post&#39; action=&#39;http://localhost:1313/hello/welcome&#39;&gt;&#34; + &#34;&lt;input type=&#39;text&#39; name=&#39;name&#39; /&gt;&#34; + &#34;&lt;input type=&#39;submit&#39; value=&#39;Greet Me!</description>
    </item>
    <item>
      <title>Cleaning Up Your Controllers</title>
      <link>http://localhost:1313/aspdotnet-controllers-and-routes/reading/controllers-attributes/index.html</link>
      <pubDate>Mon, 06 Feb 2023 14:09:15 -0600</pubDate>
      <guid>http://localhost:1313/aspdotnet-controllers-and-routes/reading/controllers-attributes/index.html</guid>
      <description>So far, we have been adding attributes to our methods as we go along for each specific use case. However, now our controller is rather unorganized and full of commented out attributes. We can use a couple tips and tricks from attribute routing to clean this controller up.&#xA;Once you have written several action methods within a class, you may notice some similar behavior. You may also want to expand upon the behavior that different action methods can make use of.</description>
    </item>
    <item>
      <title>Video Walkthrough</title>
      <link>http://localhost:1313/aspdotnet-controllers-and-routes/reading/video-walkthrough/index.html</link>
      <pubDate>Mon, 06 Feb 2023 14:09:15 -0600</pubDate>
      <guid>http://localhost:1313/aspdotnet-controllers-and-routes/reading/video-walkthrough/index.html</guid>
      <description>This is a video walkthrough of all the steps taken during the chapter. To follow along, make sure to fork and clone HelloASPDotNET . The video starts on the main branch and ends on the controllers-and-routing branch. The video includes timestamps that correspond to each page in the reading in case you want to revisit a specific task or technique.</description>
    </item>
  </channel>
</rss>